// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/shops": {
            "get": {
                "description": "Get a paginated list of shops",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shops"
                ],
                "summary": "List shops",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include inactive shops",
                        "name": "include_inactive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ShopListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new shop with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shops"
                ],
                "summary": "Create a new shop",
                "parameters": [
                    {
                        "description": "Shop information",
                        "name": "shop",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateShopRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ShopResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/shops/{id}": {
            "get": {
                "description": "Get detailed shop information by ID including warehouse references",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shops"
                ],
                "summary": "Get shop by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ShopDetailResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/shops/{id}/warehouses": {
            "get": {
                "description": "Get all warehouses associated with a shop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shops"
                ],
                "summary": "Get shop warehouses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ShopWarehousesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/response.ErrorInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateShopRequest": {
            "description": "Request to create a new shop",
            "type": "object",
            "required": [
                "address",
                "contact_email",
                "contact_phone",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, New York, NY 10001"
                },
                "contact_email": {
                    "type": "string",
                    "example": "contact@example.com"
                },
                "contact_phone": {
                    "type": "string",
                    "example": "+1-555-123-4567"
                },
                "description": {
                    "type": "string",
                    "example": "Our flagship bookstore location"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3,
                    "example": "Downtown Bookstore"
                }
            }
        },
        "model.ShopDetailResponse": {
            "description": "Detailed shop information including associated warehouses",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, New York, NY 10001"
                },
                "contact_email": {
                    "type": "string",
                    "example": "contact@example.com"
                },
                "contact_phone": {
                    "type": "string",
                    "example": "+1-555-123-4567"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-05-18T08:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Our flagship bookstore location"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Downtown Bookstore"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-05-18T08:00:00Z"
                },
                "warehouse_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WarehouseID"
                    }
                }
            }
        },
        "model.ShopListResponse": {
            "description": "Paginated list of shops",
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 10
                },
                "shops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ShopResponse"
                    }
                },
                "total_count": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "model.ShopResponse": {
            "description": "Response containing shop information",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St, New York, NY 10001"
                },
                "contact_email": {
                    "type": "string",
                    "example": "contact@example.com"
                },
                "contact_phone": {
                    "type": "string",
                    "example": "+1-555-123-4567"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-05-18T08:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Our flagship bookstore location"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Downtown Bookstore"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-05-18T08:00:00Z"
                }
            }
        },
        "model.ShopWarehousesResponse": {
            "description": "Collection of warehouses associated with a shop",
            "type": "object",
            "properties": {
                "shop_id": {
                    "type": "integer",
                    "example": 1
                },
                "warehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WarehouseResponse"
                    }
                }
            }
        },
        "model.WarehouseID": {
            "description": "Reference to a warehouse by ID",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "model.WarehouseResponse": {
            "description": "Information about a warehouse",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "789 Warehouse Blvd, Springfield, IL 62701"
                },
                "capacity": {
                    "type": "integer",
                    "example": 5000
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-05-01T08:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 42
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Main Distribution Center"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-05-02T10:30:00Z"
                }
            }
        },
        "response.ErrorInfo": {
            "description": "Detailed error information returned when an error occurs",
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "RESOURCE_NOT_FOUND"
                },
                "message": {
                    "type": "string",
                    "example": "The requested resource was not found"
                }
            }
        },
        "response.Response": {
            "description": "Standardized API response format for all endpoints",
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "$ref": "#/definitions/response.ErrorInfo"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Shop Service API",
	Description:      "API for managing shops and their warehouse associations",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
